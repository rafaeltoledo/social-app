version: 2

references:
  workspace: &workspace
    ~/social-app

  config-android: &config-android
    docker:
      - image: circleci/android:api-30
    working_directory: *workspace
    enviroment:
      JVM_OPTS: -Xmx3200m

  config-gcloud: &config-gcloud
    docker:
      - image: google/cloud-sdk:latest
    working_directory: *workspace

  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key

  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle/caches
        - ~/.gradle/wrapper

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: .
      paths:
        - app/build/reports
        - app/build/outputs
        - scripts/**

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace

commands:
  store-social-app-artifacts:
    description: "It stores Lint & Test artifacts"
    parameters:
      artifact-path:
        type: string
    steps:
      - store_artifacts:
          path: <<paramters.artifact-path>>

jobs:
  build:
    <<: *config-android

    steps:
      - checkout

      - *restore_cache

      - run:
          name: Accept licenses
          command: yes | sdkmanager --licenses || true

      - run:
          name: Decrypt release key
          command: openssl aes-256-cbc -d -in distribution/release.keystore-cipher -out distribution/release.keystore -md sha256 -k $CIPHER_DECRYPT_KEY

      - run:
          name: Setup Google Services JSON
          command: |
            mkdir -p app/src/debug/ && touch app/src/debug/google-services.json
            echo "${JSON_FIREBASE_DEVELOPMENT}" >> "app/src/debug/google-services.json"
            mkdir -p app/src/release/ && touch app/src/release/google-services.json
            echo "${JSON_FIREBASE_RELEASE}" >> "app/src/release/google-services.json"

      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies --no-daemon --max-workers 2 --stacktrace

      - run:
          name: Run Linters
          command: ./gradlew check --no-daemon --max-workers 2 --stacktrace

      - run:
          name: Run Tests and generate Code Coverage
          command: ./gradlew createCombinedCoverageReport --no-daemon --max-workers 2 --stacktrace

      - run:
          name: Upload code coverage data
          command: ./gradlew coveralls --no-daemon --max-workers 2 --stacktrace

      - run:
          name: Build
          command: ./gradlew assemble assembleAndroidTest --max-workers 2 --no-daemon --stacktrace

      - store_test_results:
          path: app/build/test-results

      - store_artifacts:
          path: app/build/reports
          destination: reports

      - store_artifacts:
          path: app/build/outputs/apk
          destination: apks

      - store_artifacts:
          path: app/build/outputs/bundle
          destination: bundle

      - *save_cache

      - *persist_to_workspace

  test_instrumented:
    <<: *config-gcloud

    steps:
      - *attach_workspace

      - run:
          name: Setup Google Cloud auth
          command: scripts/ftl-setup.sh

      - run:
          name: Run tests on Firebase Test Lab
          command: scripts/ftl-run-tests.sh

      - run:
          name: Download results
          command: scripts/ftl-download-results.sh firebase_test_results
          when: always

      - store_artifacts:
          path: firebase_test_results

      - store_test_results:
          path: firebase_test_results

workflows:
  version: 2

  build_and_test:
    jobs:
      - build
      - test_instrumented:
          requires:
            - build
